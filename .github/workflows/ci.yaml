# .github/workflows/ci.yml
name: Build Mosquitto Plugin

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build-type: [Release]
        linkage: [Shared, Static]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      # Linux: install both shared (.so) and static (.a) dev packages
      - name: Install Linux deps
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake build-essential pkg-config \
            libmosquitto-dev \
            libcurl4-openssl-dev \
            libjwt-dev \
            libjansson-dev

      # Windows: bootstrap vcpkg & install dynamic + static triplets
      - name: Bootstrap vcpkg & install deps
        if: ${{ runner.os == 'Windows' }}
        shell: pwsh
        run: |
          git clone https://github.com/microsoft/vcpkg.git $Env:GITHUB_WORKSPACE\vcpkg
          .\vcpkg\bootstrap-vcpkg.bat -disableMetrics

          # dynamic deps
          .\vcpkg\vcpkg install curl libjwt jansson
          # static‐linked deps
          .\vcpkg\vcpkg install curl:x64-windows-static libjwt:x64-windows-static jansson:x64-windows-static

          echo "VCPKG_TOOLCHAIN_FILE=$Env:GITHUB_WORKSPACE\vcpkg\scripts\buildsystems\vcpkg.cmake" >> $Env:GITHUB_ENV

      # Linux configure
      - name: Configure CMake (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          SHARED_FLAG=$([[ "${{ matrix.linkage }}" == "Shared" ]] && echo ON || echo OFF)
          cmake -S . -B build \
            -DBUILD_SHARED_LIBS=$SHARED_FLAG \
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}

      # Windows configure
      - name: Configure CMake (Windows)
        if: ${{ runner.os == 'Windows' }}
        shell: pwsh
        run: |
          $sharedFlag = if ('${{ matrix.linkage }}' -eq 'Shared') { 'ON' } else { 'OFF' }
          $toolchain  = $Env:VCPKG_TOOLCHAIN_FILE
          $tripletArg = if ('${{ matrix.linkage }}' -eq 'Static') { '-DVCPKG_TARGET_TRIPLET=x64-windows-static' } else { '' }

          cmake -S . -B build `
            -DBUILD_SHARED_LIBS=$sharedFlag `
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} `
            -DCMAKE_TOOLCHAIN_FILE=$toolchain `
            $tripletArg

      - name: Build plugin
        run: cmake --build build --config ${{ matrix.build-type }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mosquitto-plugin-${{ matrix.os }}-${{ matrix.linkage }}
          path: |
            build/*.so       # Linux shared
            build/*.a        # Linux static
            build/*.dll      # Windows shared or static-linked DLL
            build/${{ matrix.build-type }}/*.dll
